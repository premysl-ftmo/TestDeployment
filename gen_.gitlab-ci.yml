---
variables:
  AUTO_BUILD_IMAGE_VERSION: v4.11.1
  AUTO_DEVOPS_PLATFORM_TARGET: ECS
build:
  stage: build
  image: "${CI_TEMPLATE_REGISTRY_HOST}/gitlab-org/cluster-integration/auto-build-image:${AUTO_BUILD_IMAGE_VERSION}"
  variables:
    DOCKER_TLS_CERTDIR: ''
  services:
  - name: docker:20.10.12-dind
    command:
    - "--tls=false"
    - "--host=tcp://0.0.0.0:2375"
  script:
  - |
    if [[ -z "$CI_COMMIT_TAG" ]]; then
      export CI_APPLICATION_REPOSITORY=${CI_APPLICATION_REPOSITORY:-$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG}
      export CI_APPLICATION_TAG=${CI_APPLICATION_TAG:-$CI_COMMIT_SHA}
    else
      export CI_APPLICATION_REPOSITORY=${CI_APPLICATION_REPOSITORY:-$CI_REGISTRY_IMAGE}
      export CI_APPLICATION_TAG=${CI_APPLICATION_TAG:-$CI_COMMIT_TAG}
    fi
  - "/build/build.sh"
  artifacts:
    reports:
      dotenv:
      - gl-auto-build-variables.env
  rules:
  - if: "$BUILD_DISABLED"
    when: never
  - if: $AUTO_DEVOPS_PLATFORM_TARGET == "EC2"
    when: never
  - if: "$CI_COMMIT_TAG || $CI_COMMIT_BRANCH"
build_artifact:
  stage: build
  script:
  - printf "To build your project, please create a build_artifact job into your .gitlab-ci.yml
    file.\nMore information at https://docs.gitlab.com/ee/ci/cloud_deployment\n"
  - exit 1
  rules:
  - if: "$BUILD_DISABLED"
    when: never
  - if: $AUTO_DEVOPS_PLATFORM_TARGET == "EC2"
".ecs_image":
  image: "${CI_TEMPLATE_REGISTRY_HOST}/gitlab-org/cloud-deploy/aws-ecs:latest"
".deploy_to_ecs":
  image: "${CI_TEMPLATE_REGISTRY_HOST}/gitlab-org/cloud-deploy/aws-ecs:latest"
  extends: ".ecs_image"
  dependencies: []
  script:
  - ecs update-task-definition
".review_ecs_base":
  image: "${CI_TEMPLATE_REGISTRY_HOST}/gitlab-org/cloud-deploy/aws-ecs:latest"
  extends: ".deploy_to_ecs"
  dependencies: []
  script:
  - ecs update-task-definition
  stage: review
  after_script:
  - echo "http://$(ecs get-task-hostname)" > environment_url.txt
  artifacts:
    paths:
    - environment_url.txt
".production_ecs_base":
  image: "${CI_TEMPLATE_REGISTRY_HOST}/gitlab-org/cloud-deploy/aws-ecs:latest"
  extends: ".deploy_to_ecs"
  dependencies: []
  script:
  - ecs update-task-definition
  stage: production
  environment:
    name: production
".stop_review_ecs_base":
  image: "${CI_TEMPLATE_REGISTRY_HOST}/gitlab-org/cloud-deploy/aws-ecs:latest"
  extends: ".ecs_image"
  stage: cleanup
  allow_failure: true
  script:
  - ecs stop-task
review_ecs:
  image: "${CI_TEMPLATE_REGISTRY_HOST}/gitlab-org/cloud-deploy/aws-ecs:latest"
  extends: ".review_ecs_base"
  dependencies: []
  script:
  - ecs update-task-definition
  stage: review
  after_script:
  - echo "http://$(ecs get-task-hostname)" > environment_url.txt
  artifacts:
    paths:
    - environment_url.txt
  environment:
    name: review/$CI_COMMIT_REF_NAME
    on_stop: stop_review_ecs
  rules:
  - if: $AUTO_DEVOPS_PLATFORM_TARGET != "ECS"
    when: never
  - if: "$CI_KUBERNETES_ACTIVE || $KUBECONFIG"
    when: never
  - if: "$REVIEW_DISABLED"
    when: never
  - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH"
    when: never
  - if: "$CI_COMMIT_TAG || $CI_COMMIT_BRANCH"
stop_review_ecs:
  image: "${CI_TEMPLATE_REGISTRY_HOST}/gitlab-org/cloud-deploy/aws-ecs:latest"
  extends: ".stop_review_ecs_base"
  stage: cleanup
  allow_failure: true
  script:
  - ecs stop-task
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop
  rules:
  - if: $AUTO_DEVOPS_PLATFORM_TARGET != "ECS"
    when: never
  - if: "$CI_KUBERNETES_ACTIVE || $KUBECONFIG"
    when: never
  - if: "$REVIEW_DISABLED"
    when: never
  - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH"
    when: never
  - if: "$CI_COMMIT_TAG || $CI_COMMIT_BRANCH"
    when: manual
review_fargate:
  image: "${CI_TEMPLATE_REGISTRY_HOST}/gitlab-org/cloud-deploy/aws-ecs:latest"
  extends: ".review_ecs_base"
  dependencies: []
  script:
  - ecs update-task-definition
  stage: review
  after_script:
  - echo "http://$(ecs get-task-hostname)" > environment_url.txt
  artifacts:
    paths:
    - environment_url.txt
  environment:
    name: review/$CI_COMMIT_REF_NAME
    on_stop: stop_review_fargate
  rules:
  - if: $AUTO_DEVOPS_PLATFORM_TARGET != "FARGATE"
    when: never
  - if: "$CI_KUBERNETES_ACTIVE || $KUBECONFIG"
    when: never
  - if: "$REVIEW_DISABLED"
    when: never
  - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH"
    when: never
  - if: "$CI_COMMIT_TAG || $CI_COMMIT_BRANCH"
stop_review_fargate:
  image: "${CI_TEMPLATE_REGISTRY_HOST}/gitlab-org/cloud-deploy/aws-ecs:latest"
  extends: ".stop_review_ecs_base"
  stage: cleanup
  allow_failure: true
  script:
  - ecs stop-task
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop
  rules:
  - if: $AUTO_DEVOPS_PLATFORM_TARGET != "FARGATE"
    when: never
  - if: "$CI_KUBERNETES_ACTIVE || $KUBECONFIG"
    when: never
  - if: "$REVIEW_DISABLED"
    when: never
  - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH"
    when: never
  - if: "$CI_COMMIT_TAG || $CI_COMMIT_BRANCH"
    when: manual
production_ecs:
  image: "${CI_TEMPLATE_REGISTRY_HOST}/gitlab-org/cloud-deploy/aws-ecs:latest"
  extends: ".production_ecs_base"
  dependencies: []
  script:
  - ecs update-task-definition
  stage: production
  environment:
    name: production
  rules:
  - if: $AUTO_DEVOPS_PLATFORM_TARGET != "ECS"
    when: never
  - if: "$CI_KUBERNETES_ACTIVE || $KUBECONFIG"
    when: never
  - if: "$CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH"
    when: never
  - if: "$CI_COMMIT_TAG || $CI_COMMIT_BRANCH"
production_fargate:
  image: "${CI_TEMPLATE_REGISTRY_HOST}/gitlab-org/cloud-deploy/aws-ecs:latest"
  extends: ".production_ecs_base"
  dependencies: []
  script:
  - ecs update-task-definition
  stage: production
  environment:
    name: production
  rules:
  - if: $AUTO_DEVOPS_PLATFORM_TARGET != "FARGATE"
    when: never
  - if: "$CI_KUBERNETES_ACTIVE || $KUBECONFIG"
    when: never
  - if: "$CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH"
    when: never
  - if: "$CI_COMMIT_TAG || $CI_COMMIT_BRANCH"
stages:
- ".pre"
- build
- test
- review
- dast
- deploy
- production
- cleanup
- ".post"
